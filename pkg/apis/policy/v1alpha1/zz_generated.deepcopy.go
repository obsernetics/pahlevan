//go:build !ignore_autogenerated

/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttackSurfaceStatus) DeepCopyInto(out *AttackSurfaceStatus) {
	*out = *in
	if in.ExposedSyscalls != nil {
		in, out := &in.ExposedSyscalls, &out.ExposedSyscalls
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExposedPorts != nil {
		in, out := &in.ExposedPorts, &out.ExposedPorts
		*out = make([]int32, len(*in))
		copy(*out, *in)
	}
	if in.WritableFiles != nil {
		in, out := &in.WritableFiles, &out.WritableFiles
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Capabilities != nil {
		in, out := &in.Capabilities, &out.Capabilities
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RiskScore != nil {
		in, out := &in.RiskScore, &out.RiskScore
		*out = new(int32)
		**out = **in
	}
	if in.LastAnalysis != nil {
		in, out := &in.LastAnalysis, &out.LastAnalysis
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttackSurfaceStatus.
func (in *AttackSurfaceStatus) DeepCopy() *AttackSurfaceStatus {
	if in == nil {
		return nil
	}
	out := new(AttackSurfaceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnforcementConfig) DeepCopyInto(out *EnforcementConfig) {
	*out = *in
	if in.GracePeriod != nil {
		in, out := &in.GracePeriod, &out.GracePeriod
		*out = new(v1.Duration)
		**out = **in
	}
	if in.Exceptions != nil {
		in, out := &in.Exceptions, &out.Exceptions
		*out = make([]EnforcementException, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnforcementConfig.
func (in *EnforcementConfig) DeepCopy() *EnforcementConfig {
	if in == nil {
		return nil
	}
	out := new(EnforcementConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnforcementException) DeepCopyInto(out *EnforcementException) {
	*out = *in
	if in.Patterns != nil {
		in, out := &in.Patterns, &out.Patterns
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExpiresAt != nil {
		in, out := &in.ExpiresAt, &out.ExpiresAt
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnforcementException.
func (in *EnforcementException) DeepCopy() *EnforcementException {
	if in == nil {
		return nil
	}
	out := new(EnforcementException)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnforcementStatus) DeepCopyInto(out *EnforcementStatus) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnforcementStatus.
func (in *EnforcementStatus) DeepCopy() *EnforcementStatus {
	if in == nil {
		return nil
	}
	out := new(EnforcementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutableFilter) DeepCopyInto(out *ExecutableFilter) {
	*out = *in
	if in.AllowedExecutables != nil {
		in, out := &in.AllowedExecutables, &out.AllowedExecutables
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DeniedExecutables != nil {
		in, out := &in.DeniedExecutables, &out.DeniedExecutables
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutableFilter.
func (in *ExecutableFilter) DeepCopy() *ExecutableFilter {
	if in == nil {
		return nil
	}
	out := new(ExecutableFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilePolicy) DeepCopyInto(out *FilePolicy) {
	*out = *in
	if in.AllowedPaths != nil {
		in, out := &in.AllowedPaths, &out.AllowedPaths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DeniedPaths != nil {
		in, out := &in.DeniedPaths, &out.DeniedPaths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ReadOnlyPaths != nil {
		in, out := &in.ReadOnlyPaths, &out.ReadOnlyPaths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.WriteAllowedPaths != nil {
		in, out := &in.WriteAllowedPaths, &out.WriteAllowedPaths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExecutableFilter != nil {
		in, out := &in.ExecutableFilter, &out.ExecutableFilter
		*out = new(ExecutableFilter)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilePolicy.
func (in *FilePolicy) DeepCopy() *FilePolicy {
	if in == nil {
		return nil
	}
	out := new(FilePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPBlock) DeepCopyInto(out *IPBlock) {
	*out = *in
	if in.Except != nil {
		in, out := &in.Except, &out.Except
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPBlock.
func (in *IPBlock) DeepCopy() *IPBlock {
	if in == nil {
		return nil
	}
	out := new(IPBlock)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelSelector) DeepCopyInto(out *LabelSelector) {
	*out = *in
	if in.MatchLabels != nil {
		in, out := &in.MatchLabels, &out.MatchLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.MatchExpressions != nil {
		in, out := &in.MatchExpressions, &out.MatchExpressions
		*out = make([]LabelSelectorRequirement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = new(LabelSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelSelector.
func (in *LabelSelector) DeepCopy() *LabelSelector {
	if in == nil {
		return nil
	}
	out := new(LabelSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelSelectorRequirement) DeepCopyInto(out *LabelSelectorRequirement) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelSelectorRequirement.
func (in *LabelSelectorRequirement) DeepCopy() *LabelSelectorRequirement {
	if in == nil {
		return nil
	}
	out := new(LabelSelectorRequirement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningConfig) DeepCopyInto(out *LearningConfig) {
	*out = *in
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(v1.Duration)
		**out = **in
	}
	if in.WindowSize != nil {
		in, out := &in.WindowSize, &out.WindowSize
		*out = new(v1.Duration)
		**out = **in
	}
	if in.MinSamples != nil {
		in, out := &in.MinSamples, &out.MinSamples
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningConfig.
func (in *LearningConfig) DeepCopy() *LearningConfig {
	if in == nil {
		return nil
	}
	out := new(LearningConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LearningStatus) DeepCopyInto(out *LearningStatus) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = (*in).DeepCopy()
	}
	if in.Progress != nil {
		in, out := &in.Progress, &out.Progress
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LearningStatus.
func (in *LearningStatus) DeepCopy() *LearningStatus {
	if in == nil {
		return nil
	}
	out := new(LearningStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogOutput) DeepCopyInto(out *LogOutput) {
	*out = *in
	in.Config.DeepCopyInto(&out.Config)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogOutput.
func (in *LogOutput) DeepCopy() *LogOutput {
	if in == nil {
		return nil
	}
	out := new(LogOutput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoggingConfig) DeepCopyInto(out *LoggingConfig) {
	*out = *in
	if in.Outputs != nil {
		in, out := &in.Outputs, &out.Outputs
		*out = make([]LogOutput, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoggingConfig.
func (in *LoggingConfig) DeepCopy() *LoggingConfig {
	if in == nil {
		return nil
	}
	out := new(LoggingConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricsConfig) DeepCopyInto(out *MetricsConfig) {
	*out = *in
	if in.Exporters != nil {
		in, out := &in.Exporters, &out.Exporters
		*out = make([]MetricsExporter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(v1.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricsConfig.
func (in *MetricsConfig) DeepCopy() *MetricsConfig {
	if in == nil {
		return nil
	}
	out := new(MetricsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricsExporter) DeepCopyInto(out *MetricsExporter) {
	*out = *in
	in.Config.DeepCopyInto(&out.Config)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricsExporter.
func (in *MetricsExporter) DeepCopy() *MetricsExporter {
	if in == nil {
		return nil
	}
	out := new(MetricsExporter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPeer) DeepCopyInto(out *NetworkPeer) {
	*out = *in
	if in.IPBlock != nil {
		in, out := &in.IPBlock, &out.IPBlock
		*out = new(IPBlock)
		(*in).DeepCopyInto(*out)
	}
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = new(LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.PodSelector != nil {
		in, out := &in.PodSelector, &out.PodSelector
		*out = new(LabelSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPeer.
func (in *NetworkPeer) DeepCopy() *NetworkPeer {
	if in == nil {
		return nil
	}
	out := new(NetworkPeer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPolicy) DeepCopyInto(out *NetworkPolicy) {
	*out = *in
	if in.EgressRules != nil {
		in, out := &in.EgressRules, &out.EgressRules
		*out = make([]NetworkRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IngressRules != nil {
		in, out := &in.IngressRules, &out.IngressRules
		*out = make([]NetworkRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPolicy.
func (in *NetworkPolicy) DeepCopy() *NetworkPolicy {
	if in == nil {
		return nil
	}
	out := new(NetworkPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPort) DeepCopyInto(out *NetworkPort) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
	if in.StartPort != nil {
		in, out := &in.StartPort, &out.StartPort
		*out = new(int32)
		**out = **in
	}
	if in.EndPort != nil {
		in, out := &in.EndPort, &out.EndPort
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPort.
func (in *NetworkPort) DeepCopy() *NetworkPort {
	if in == nil {
		return nil
	}
	out := new(NetworkPort)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkRule) DeepCopyInto(out *NetworkRule) {
	*out = *in
	if in.Protocols != nil {
		in, out := &in.Protocols, &out.Protocols
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]NetworkPort, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Peers != nil {
		in, out := &in.Peers, &out.Peers
		*out = make([]NetworkPeer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkRule.
func (in *NetworkRule) DeepCopy() *NetworkRule {
	if in == nil {
		return nil
	}
	out := new(NetworkRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObservabilityConfig) DeepCopyInto(out *ObservabilityConfig) {
	*out = *in
	in.Metrics.DeepCopyInto(&out.Metrics)
	in.Tracing.DeepCopyInto(&out.Tracing)
	in.Logging.DeepCopyInto(&out.Logging)
	in.Visualization.DeepCopyInto(&out.Visualization)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObservabilityConfig.
func (in *ObservabilityConfig) DeepCopy() *ObservabilityConfig {
	if in == nil {
		return nil
	}
	out := new(ObservabilityConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PahlevanPolicy) DeepCopyInto(out *PahlevanPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PahlevanPolicy.
func (in *PahlevanPolicy) DeepCopy() *PahlevanPolicy {
	if in == nil {
		return nil
	}
	out := new(PahlevanPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PahlevanPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PahlevanPolicyList) DeepCopyInto(out *PahlevanPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PahlevanPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PahlevanPolicyList.
func (in *PahlevanPolicyList) DeepCopy() *PahlevanPolicyList {
	if in == nil {
		return nil
	}
	out := new(PahlevanPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PahlevanPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PahlevanPolicySpec) DeepCopyInto(out *PahlevanPolicySpec) {
	*out = *in
	in.Selector.DeepCopyInto(&out.Selector)
	in.LearningConfig.DeepCopyInto(&out.LearningConfig)
	in.EnforcementConfig.DeepCopyInto(&out.EnforcementConfig)
	if in.SyscallPolicy != nil {
		in, out := &in.SyscallPolicy, &out.SyscallPolicy
		*out = new(SyscallPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkPolicy != nil {
		in, out := &in.NetworkPolicy, &out.NetworkPolicy
		*out = new(NetworkPolicy)
		(*in).DeepCopyInto(*out)
	}
	if in.FilePolicy != nil {
		in, out := &in.FilePolicy, &out.FilePolicy
		*out = new(FilePolicy)
		(*in).DeepCopyInto(*out)
	}
	in.SelfHealing.DeepCopyInto(&out.SelfHealing)
	in.ObservabilityConfig.DeepCopyInto(&out.ObservabilityConfig)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PahlevanPolicySpec.
func (in *PahlevanPolicySpec) DeepCopy() *PahlevanPolicySpec {
	if in == nil {
		return nil
	}
	out := new(PahlevanPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PahlevanPolicyStatus) DeepCopyInto(out *PahlevanPolicyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]PolicyCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LearningStatus != nil {
		in, out := &in.LearningStatus, &out.LearningStatus
		*out = new(LearningStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.EnforcementStatus != nil {
		in, out := &in.EnforcementStatus, &out.EnforcementStatus
		*out = new(EnforcementStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.AttackSurface != nil {
		in, out := &in.AttackSurface, &out.AttackSurface
		*out = new(AttackSurfaceStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetWorkloads != nil {
		in, out := &in.TargetWorkloads, &out.TargetWorkloads
		*out = make([]WorkloadReference, len(*in))
		copy(*out, *in)
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PahlevanPolicyStatus.
func (in *PahlevanPolicyStatus) DeepCopy() *PahlevanPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(PahlevanPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyCondition) DeepCopyInto(out *PolicyCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyCondition.
func (in *PolicyCondition) DeepCopy() *PolicyCondition {
	if in == nil {
		return nil
	}
	out := new(PolicyCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessFilter) DeepCopyInto(out *ProcessFilter) {
	*out = *in
	if in.Commands != nil {
		in, out := &in.Commands, &out.Commands
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ParentProcesses != nil {
		in, out := &in.ParentProcesses, &out.ParentProcesses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessFilter.
func (in *ProcessFilter) DeepCopy() *ProcessFilter {
	if in == nil {
		return nil
	}
	out := new(ProcessFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SelfHealingConfig) DeepCopyInto(out *SelfHealingConfig) {
	*out = *in
	if in.RollbackWindow != nil {
		in, out := &in.RollbackWindow, &out.RollbackWindow
		*out = new(v1.Duration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SelfHealingConfig.
func (in *SelfHealingConfig) DeepCopy() *SelfHealingConfig {
	if in == nil {
		return nil
	}
	out := new(SelfHealingConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyscallPolicy) DeepCopyInto(out *SyscallPolicy) {
	*out = *in
	if in.AllowedSyscalls != nil {
		in, out := &in.AllowedSyscalls, &out.AllowedSyscalls
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DeniedSyscalls != nil {
		in, out := &in.DeniedSyscalls, &out.DeniedSyscalls
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.CapabilityFilter != nil {
		in, out := &in.CapabilityFilter, &out.CapabilityFilter
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ProcessFilter != nil {
		in, out := &in.ProcessFilter, &out.ProcessFilter
		*out = new(ProcessFilter)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyscallPolicy.
func (in *SyscallPolicy) DeepCopy() *SyscallPolicy {
	if in == nil {
		return nil
	}
	out := new(SyscallPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingConfig) DeepCopyInto(out *TracingConfig) {
	*out = *in
	if in.SamplingRate != nil {
		in, out := &in.SamplingRate, &out.SamplingRate
		*out = new(float64)
		**out = **in
	}
	in.Exporter.DeepCopyInto(&out.Exporter)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingConfig.
func (in *TracingConfig) DeepCopy() *TracingConfig {
	if in == nil {
		return nil
	}
	out := new(TracingConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TracingExporter) DeepCopyInto(out *TracingExporter) {
	*out = *in
	in.Config.DeepCopyInto(&out.Config)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TracingExporter.
func (in *TracingExporter) DeepCopy() *TracingExporter {
	if in == nil {
		return nil
	}
	out := new(TracingExporter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VisualizationConfig) DeepCopyInto(out *VisualizationConfig) {
	*out = *in
	if in.UpdateInterval != nil {
		in, out := &in.UpdateInterval, &out.UpdateInterval
		*out = new(v1.Duration)
		**out = **in
	}
	if in.Exporters != nil {
		in, out := &in.Exporters, &out.Exporters
		*out = make([]VisualizationExporter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VisualizationConfig.
func (in *VisualizationConfig) DeepCopy() *VisualizationConfig {
	if in == nil {
		return nil
	}
	out := new(VisualizationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VisualizationExporter) DeepCopyInto(out *VisualizationExporter) {
	*out = *in
	in.Config.DeepCopyInto(&out.Config)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VisualizationExporter.
func (in *VisualizationExporter) DeepCopy() *VisualizationExporter {
	if in == nil {
		return nil
	}
	out := new(VisualizationExporter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadReference) DeepCopyInto(out *WorkloadReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadReference.
func (in *WorkloadReference) DeepCopy() *WorkloadReference {
	if in == nil {
		return nil
	}
	out := new(WorkloadReference)
	in.DeepCopyInto(out)
	return out
}
