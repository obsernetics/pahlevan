name: Security

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM

jobs:
  trivy:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Trivy scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  govulncheck:
    name: Go Vulnerability Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v6
      with:
        go-version: "1.24"

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mod-

    - name: Cache Go tools
      uses: actions/cache@v4
      with:
        path: ~/go/bin
        key: ${{ runner.os }}-go-tools-${{ hashFiles('pkg/ebpf/bpf2go.go') }}
        restore-keys: |
          ${{ runner.os }}-go-tools-

    - name: Cache eBPF generated files
      uses: actions/cache@v4
      with:
        path: |
          pkg/ebpf/*monitor_bpf*.go
          pkg/ebpf/*monitor_bpf*.o
        key: ${{ runner.os }}-ebpf-${{ hashFiles('bpf/*.c', 'bpf/*.h') }}
        restore-keys: |
          ${{ runner.os }}-ebpf-

    - name: Cache APT packages
      uses: actions/cache@v4
      with:
        path: |
          /var/cache/apt/archives
          /var/lib/apt/lists
        key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/security.yml') }}
        restore-keys: |
          ${{ runner.os }}-apt-

    - name: Install eBPF dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang llvm libbpf-dev linux-headers-generic

    - name: Generate eBPF bindings
      run: |
        go install github.com/cilium/ebpf/cmd/bpf2go@latest
        go generate ./pkg/ebpf/

    - name: Run govulncheck
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...

  codeql:
    name: CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: go

    - name: Setup Go
      uses: actions/setup-go@v6
      with:
        go-version: "1.24"

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mod-

    - name: Cache Go build
      uses: actions/cache@v4
      with:
        path: ~/.cache/go-build
        key: ${{ runner.os }}-go-build-${{ hashFiles('**/*.go') }}
        restore-keys: |
          ${{ runner.os }}-go-build-

    - name: Cache Go tools
      uses: actions/cache@v4
      with:
        path: ~/go/bin
        key: ${{ runner.os }}-go-tools-${{ hashFiles('pkg/ebpf/bpf2go.go') }}
        restore-keys: |
          ${{ runner.os }}-go-tools-

    - name: Cache eBPF generated files
      uses: actions/cache@v4
      with:
        path: |
          pkg/ebpf/*monitor_bpf*.go
          pkg/ebpf/*monitor_bpf*.o
        key: ${{ runner.os }}-ebpf-${{ hashFiles('bpf/*.c', 'bpf/*.h') }}
        restore-keys: |
          ${{ runner.os }}-ebpf-

    - name: Cache APT packages
      uses: actions/cache@v4
      with:
        path: |
          /var/cache/apt/archives
          /var/lib/apt/lists
        key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/security.yml') }}
        restore-keys: |
          ${{ runner.os }}-apt-

    - name: Install eBPF dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang llvm libbpf-dev linux-headers-generic

    - name: Generate eBPF bindings
      run: |
        go install github.com/cilium/ebpf/cmd/bpf2go@latest
        go generate ./pkg/ebpf/

    - name: Build
      run: go build ./...

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3