run:
  timeout: 5m
  tests: true
  modules-download-mode: readonly

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters:
  enable:
    - asciicheck
    - bodyclose
    - containedctx
    - cyclop
    - dupl
    - durationcheck
    - errcheck
    - errname
    - errorlint
    - exhaustive
    - exportloopref
    - forbidigo
    - forcetypeassert
    - gci
    - gocheckcompilerdirectives
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - goerr113
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomnd
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - grouper
    - importas
    - ineffassign
    - interfacebloat
    - ireturn
    - lll
    - loggercheck
    - maintidx
    - makezero
    - misspell
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - nlreturn
    - noctx
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - predeclared
    - promlinter
    - reassign
    - revive
    - rowserrcheck
    - sqlclosecheck
    - staticcheck
    - stylecheck
    - tagliatelle
    - tenv
    - testpackage
    - thelper
    - typecheck
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - varnamelen
    - wastedassign
    - whitespace
    - wrapcheck
    - wsl

linters-settings:
  cyclop:
    max-complexity: 15
    package-average: 10.0

  dupl:
    threshold: 100

  errcheck:
    check-type-assertions: true
    check-blank: true

  exhaustive:
    default-signifies-exhaustive: false

  forbidigo:
    forbid:
      - ^print.*$
      - 'fmt\.Print.*'

  gci:
    local-prefixes: github.com/obsernetics/pahlevan

  gocognit:
    min-complexity: 15

  goconst:
    min-len: 2
    min-occurrences: 2

  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport
      - ifElseChain
      - octalLiteral
      - whyNoLint

  gocyclo:
    min-complexity: 15

  godot:
    scope: declarations
    exclude:
      - "^Generated by"
      - "^Copyright"

  godox:
    keywords:
      - NOTE
      - OPTIMIZE
      - HACK

  gomnd:
    settings:
      mnd:
        checks: argument,case,condition,operation,return,assign

  govet:
    check-shadowing: true

  lll:
    line-length: 120

  misspell:
    locale: US

  nakedret:
    max-func-lines: 30

  nestif:
    min-complexity: 4

  nlreturn:
    block-size: 1

  nolintlint:
    allow-leading-space: true
    allow-unused: false
    require-explanation: false
    require-specific: false

  revive:
    rules:
      - name: exported
        disabled: false

  stylecheck:
    go: "1.24"

  tagliatelle:
    case:
      rules:
        json: snake

  tenv:
    all: false

  varnamelen:
    min-name-length: 3
    ignore-names:
      - err
      - i
      - j
      - k
      - v
      - id
      - ip
      - db
      - tx
      - ok

  wrapcheck:
    ignoreSigs:
      - .Errorf(
      - errors.New(
      - errors.Unwrap(
      - .Wrap(
      - .Wrapf(

issues:
  exclude-use-default: false
  exclude:
    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv). is not checked

    # govet: Common false positives
    - (possible misuse of unsafe.Pointer|should have signature)

    # staticcheck: Developers tend to write in C-style with an explicit 'break' in a 'switch', so it's ok to ignore
    - ineffective break statement. Did you mean to break out of the outer loop

    # gosec: Too many false-positives on 'unsafe' usage
    - G103

    # gosec: Too many false-positives for parametrized shell calls
    - G204

    # gosec: Duplicated errcheck checks
    - G104

  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - funlen
        - varnamelen
        - nlreturn
        - wrapcheck

    # Exclude lll issues for long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "

    # Exclude godox linter for TODO/FIXME comments in test files
    - path: _test\.go
      linters:
        - godox

  max-issues-per-linter: 0
  max-same-issues: 0